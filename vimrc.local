" load pathogen "
filetype off
 set rtp+=~/.vim/bundle/vundle/
 call vundle#rc()

 " let Vundle manage Vundle
 " required!
 Bundle 'gmarik/vundle'

 " My Bundles here:
 "
 " original repos on github
"" Bundle 'Lokaltog/vim-easymotion'
"" Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
  Bundle 'tpope/vim-fugitive'
  Bundle 'tpope/vim-rails.git'
  Bundle 'tpope/vim-rvm.git'
  Bundle 'tpope/vim-bundler.git'
  Bundle 'tpope/vim-rake.git'
  Bundle 'lucapette/vim-ruby-doc.git'
  Bundle 'wgibbs/vim-irblack.git'
  Bundle 'fgarcia/agtd.git'
"" " vim-scripts repos
  Bundle 'utl.vim'
"" Bundle 'FuzzyFinder'
"" " non github repos
"" Bundle 'git://git.wincent.com/command-t.git'
"" " ...
filetype plugin indent on

set statusline+=%{exists('g:loaded_rvm')?rvm#statusline():''}

" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>

" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬

" Toggle spell checking on and off with `,s`
let mapleader = ","
nmap <silent> <leader>s :set spell!<CR>

" Set region to British English
set spelllang=de_de

set cpoptions+=$
set wildmenu
set sw=2
set sts=2

" automatically remove trailing whitespace before write
function! StripTrailingWhitespace()
  normal mZ
  %s/\s\+$//e
  if line("'Z") != line(".")
    echo "Stripped whitespace\n"
  endif
  normal `Z
endfunction
autocmd BufWritePre * :call StripTrailingWhitespace()

function! CompressBlankLines()
  normal mZ
  %s/^\n\+/\r/e
  if line("'Z") != line(".")
    echo "Compressed blank lines\n"
  endif
  normal `Z
endfunction
autocmd BufWritePre * :call CompressBlankLines()
